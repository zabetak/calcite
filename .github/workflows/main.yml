# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default workflow for GitHub Actions that is used for continuous
# integration. A configuration file that is used to control when, where,
# and how different CI jobs are executed.
# For more information on how to modify this file check the following link:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions

name: CI

on:
  push:
    paths-ignore:
      - 'site/**'
    branches:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened, labeled]
    paths-ignore:
      - 'site/**'
    branches:
      - '*'

concurrency:
  # On main/release, we don't want any jobs cancelled so the sha is used to name the group
  # On PR branches, we cancel the job if new commits are pushed
  # More info: https://stackoverflow.com/a/68422069/253468
  group: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' ) && format('ci-main-{0}', github.sha) || format('ci-main-{0}', github.ref) }}
  cancel-in-progress: true

# Throw OutOfMemoryError in case less than 35% is free after full GC
# This avoids never-ending GC trashing if memory gets too low in case of a memory leak
env:
  _JAVA_OPTIONS: '-XX:GCTimeLimit=90 -XX:GCHeapFreeLimit=35'

jobs:
  codecov:
    if: github.event.action != 'labeled'
    name: 'Code cov'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: 'Set up JDK 18'
        uses: actions/setup-java@v2
        with:
          java-version: 18
          distribution: 'zulu'
      - name: 'Build coverage report'
        run: |
          ./gradlew jacocoAggregateTestReport -PenableJacoco
      - name: 'Upload coverage to Codecov'
        uses: codecov/codecov-action@v3
        with:
          files: ./build/reports/jacoco/jacocoAggregateTestReport/jacocoAggregateTestReport.xml
          flags: unittests
          verbose: true
